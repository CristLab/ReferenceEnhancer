devtools::document()
library(ReferenceEnhancer)
PremrnaAnnotationGenerator("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/genes.gtf")
devtools::document()
library(ReferenceEnhancer)
PremrnaAnnotationGenerator("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/genes.gtf")
devtools::document()
library(ReferenceEnhancer)
PremrnaAnnotationGenerator("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/genes.gtf")
devtools::document()
library(ReferenceEnhancer)
PremrnaAnnotationGenerator("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/genes.gtf")
devtools::document()
library(ReferenceEnhancer)
PremrnaAnnotationGenerator("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/genes.gtf")
devtools::document()
library(ReferenceEnhancer)
PremrnaAnnotationGenerator("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/genes.gtf")
rtracklayer::export(premrna_df, "premrna1.gtf", format = "gtf")
devtools::document()
usethis::use_r("isolate_intergenic_reads")
}
usethis::use_r("write_bed")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads(“possorted_genome_bam.bam”, “possorted_genome_bam.bam.bai”)
isolate_intergenic_reads(possorted_genome_bam.bam, possorted_genome_bam.bam.bai)
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads(possorted_genome_bam.bam, possorted_genome_bam.bam.bai)
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads(possorted_genome_bam.bam, possorted_genome_bam.bam.bai)
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads(possorted_genome_bam.bam, possorted_genome_bam.bam.bai)
wkdir()
getwd()
setwd("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package")
devtools::document()
setwd("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/ReferenceEnhancer")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads(possorted_genome_bam.bam, possorted_genome_bam.bam.bai)
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads(possorted_genome_bam.bam, possorted_genome_bam.bam.bai)
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads(possorted_genome_bam.bam, possorted_genome_bam.bam.bai)
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads(possorted_genome_bam.bam, possorted_genome_bam.bam.bai)
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads(possorted_genome_bam.bam, possorted_genome_bam.bam.bai)
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads(possorted_genome_bam.bam, possorted_genome_bam.bam.bai)
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads(possorted_genome_bam.bam, possorted_genome_bam.bam.bai)
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads(possorted_genome_bam.bam, possorted_genome_bam.bam.bai)
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads(possorted_genome_bam.bam, possorted_genome_bam.bam.bai)
usethis::use_package("GenomicAlignments")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads(possorted_genome_bam.bam, possorted_genome_bam.bam.bai)
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam”, “/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads(‘/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam’, ‘/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai’)
isolate_intergenic_reads(/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam, /Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
?ScanBamParam
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
usethis::use_package("Rsamtools")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
library(ReferenceEnhancer)
isolate_intergenic_reads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
usethis::use_r("OptimizedAnnotationAssembler")
usethis::use_package("readxl")
devtools::document()
library(ReferenceEnhancer)
OverlapResolutions(gene_overlaps, genome_annotation)
devtools::document()
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("genes.gtf", "premrna.gtf", "overlapping_genes.csv", "gene_extension.csv", "gene_replacement.csv")
devtools::document()
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("genes.gtf", "premrna.gtf", "overlapping_genes.csv", "gene_extension.csv", "gene_replacement.csv")
devtools::document()
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("genes.gtf", "premrna.gtf", "overlapping_genes.csv", "gene_extension.csv", "gene_replacement.csv")
devtools::document()
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("genes.gtf", "premrna.gtf", "overlapping_genes.csv", "gene_extension.csv", "gene_replacement.csv")
devtools::document()
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("genes.gtf", "premrna.gtf", "overlapping_genes.csv", "gene_extension.csv", "gene_replacement.csv")
devtools::document()
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("genes.gtf", "premrna.gtf", "overlapping_genes.csv", "gene_extension.csv", "gene_replacement.csv")
devtools::document()
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("genes.gtf", "premrna.gtf", "overlapping_genes.csv", "gene_extension.csv", "gene_replacement.csv")
devtools::document()
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("genes.gtf", "premrna.gtf", "overlapping_genes.csv", "gene_extension.csv", "gene_replacement.csv")
devtools::document()
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("genes.gtf", "premrna.gtf", "overlapping_genes_v2.csv", "gene_extension.csv", "gene_replacement.csv")
devtools::document()
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("genes.gtf", "premrna.gtf", "overlapping_genes_v2.csv", "gene_extension.csv", "gene_replacement.csv")
getwd()
devtools::document()
library(ReferenceEnhancer)
genome_annotation <- LoadGtf(‘test/genes.gtf')
genome_annotation <- LoadGtf("test/genes.gtf")
getwd()
ls
genome_annotation <- LoadGtf("test/genes.gtf")
genome_annotation <- LoadGtf("test/test_genes.gtf")
gene_overlaps <- IdentifyOverlappers(genome_annotation)
gene_overlaps <- IdentifyOverlappers(genome_annotation)
gene_overlaps <- IdentifyOverlappers(genome_annotation)
devtools::document()
genome_annotation <- LoadGtf("test/test_genes.gtf")
gene_overlaps <- IdentifyOverlappers(genome_annotation)
devtools::document()
gene_overlaps <- IdentifyOverlappers(genome_annotation)
devtools::document()
gene_overlaps <- IdentifyOverlappers(genome_annotation)
devtools::document()
gene_overlaps <- IdentifyOverlappers(genome_annotation)
devtools::document()
gene_overlaps <- IdentifyOverlappers(genome_annotation)
devtools::document()
gene_overlaps <- IdentifyOverlappers(genome_annotation)
devtools::document()
gene_overlaps <- IdentifyOverlappers(genome_annotation)
overlapping_gene_list
OverlapResolutions(gene_overlaps, genome_annotation)
devtools::document()
library(ReferenceEnhancer)
genome_annotation <- LoadGtf("test_genes.gtf")
gene_overlaps <- IdentifyOverlappers(genome_annotation)
PremrnaAnnotationGenerator("test_genes.gtf")
devtools::document()
IsolateIntergenicReads(“/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam”, “/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai”)
IsolateIntergenicReads("/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam", "/Users/helen/Library/CloudStorage/OneDrive-Personal/Koostoo_Hallu/Gene_Classification_Package/possorted_genome_bam.bam.bai")
devtools::document()
usethis::use_r("GenerateGeneLocationBed")
genome_annotation
dim(genome_annotation)
devtools::document()
GenerateGeneLocationBed(genome_annotation)
devtools::document()
GenerateGeneLocationBed(genome_annotation)
devtools::document()
GenerateGeneLocationBed(genome_annotation)
usethis::use_r("GenerateExtensionCandidates")
devtools::document()
GenerateExtensionCandidates()
system("export PATH=/Applications/bedtools2/bin:$PATH")
system("bedtools closest -a intergenic_reads1.bed -b gene_ranges1.bed -s -D a -fu > results.txt")
GenerateExtensionCandidates()
echo $PATH
system("echo $PATH")
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
Sys.setenv(PATH = paste(old_path, "/Applications/bedtools2/bin", sep = ":"))
system("echo $PATH")
GenerateExtensionCandidates()
devtools::document()
GenerateExtensionCandidates()
summary_data = read.table("results.txt", sep = "\t")
head(summary_data)
max(summary_data$V23)
min(summary_data$V23)
summary_data = summary_data[summary_data$V23>-10000,] # retain only sequencing reads within 10kb of known gene ends. Change to more or less stringent as desired.
summary_data = summary_data[summary_data$V23<0,] # retain only sequencing reads within 10kb of known gene ends. Change to more or less stringent as desired.
hist(summary_data$V23)
summary_data = read.table("results.txt", sep = "\t")
head(summary_data)
min(summary_data$V23)
max(summary_data$V23)
summary_data = summary_data[summary_data$V23>-10000,] # retain only sequencing reads within 10kb of known gene ends. Change to more or less stringent as desired.
summary_data = summary_data[summary_data$V23<0,] # retain only sequencing reads within 10kb of known gene ends. Change to more or less stringent as desired.
hist(summary_data$V23) # plot histogram of intergenic sequencing reads as a function of distance from 3' gene ends.
library(available)
library("available")
devtools::document()
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(ReferenceEnhancer)
?ReferenceEnhancer
??ReferenceEnhancer
devtools::document()
?LoadGTF
?LoadGTF
?LoadGTF()
library(ReferenceEnhancer)
?LoadGtf
?importIntoEnv
library(ReferenceEnhancer)
?LoadGtf
?IdentifyOverlappers
library(ReferenceEnhancer)
genome_annotation <- LoadGtf("test_genes.gtf")
gene_overlaps <- IdentifyOverlappers(genome_annotation)
OverlapResolutions(genome_annotation, gene_overlaps)
?LoadGtf
?IdentifyOverlappers
LoadGtf
?LoadGtf
?OverlapResolutions
?LoadGtf
library(ReferenceEnhancer)
library(ReferenceEnhancer)
?GenerateGeneLocationBed
getwd()
library(ReferenceEnhancer)
GenerateGeneLocationBed(genome_annotation)
library(ReferenceEnhancer)
GenerateExtensionCandidates()
old_path <- Sys.getenv("PATH")
Sys.setenv(PATH = paste(old_path, "path/to/package", sep = ":"))
GenerateExtensionCandidates()
library(ReferenceEnhancer)
library(ReferenceEnhancer)
library(usethis)
use_readme_rmd()
library(ReferenceEnhancer)
getwd()
Sys.getenv("PATH")
old_path <- Sys.getenv("PATH")
Sys.setenv(PATH = paste(old_path, "path/to/package", sep = ":"))
Sys.setenv(PATH = paste(old_path, "/Applications/bedtools2/bin", sep = ":"))
GenerateExtensionCandidates()
system("bedtools closest -a intergenic_reads1.bed -b gene_ranges1.bed -s -D a -fu > results.txt") # resulting file contains sequencing reads with distance data from closest 3' gene identity and end
getwd()
library(ReferenceEnhancer)
test_genes.gtf
library(ReferenceEnhancer)
LoadGtf("test_genes.gtf")
library(ReferenceEnhancer)
LoadGtf("test_genes.gtf")
library(ReferenceEnhancer)
library(ReferenceEnhancer)
library(ReferenceEnhancer)
genome_annotation <- LoadGtf("test_genes.gtf")
gene_overlaps <- IdentifyOverlappers(genome_annotation)
OverlapResolutions(genome_annotation, gene_overlaps)
IsolateIntergenicReads(“test_bam.bam", "test_index.bam.bai")
IsolateIntergenicReads("test_bam.bam", "test_index.bam.bai")
GenerateGeneLocationBed(genome_annotation)
GenerateExtensionCandidates()
PremrnaAnnotationGenerator(genome_annotation)
gene_extension <- GenerateExtensionCandidates()
head(gene_extension)
gene_extension
gene_extension <- GenerateExtensionCandidates()
library(ReferenceEnhancer)
gene_extension <- GenerateExtensionCandidates()
gene_extension
library(ReferenceEnhancer)
library(ReferenceEnhancer)
GenerateExtensionCandidates()
test_genes.gtf
library(ReferenceEnhancer)
library(ReferenceEnhancer)
library(ReferenceEnhancer)
library(ReferenceEnhancer)
library(ReferenceEnhancer)
library(ReferenceEnhancer)
library(ReferenceEnhancer)
genome_annotation <- LoadGtf("test_genes.gtf")
gene_overlaps <- IdentifyOverlappers(genome_annotation)
gene_overlaps
OverlapResolutions(genome_annotation, gene_overlaps)
IsolateIntergenicReads("test_bam.bam", "test_index.bam.bai")
GenerateGeneLocationBed(genome_annotation)
GenerateExtensionCandidates()
library(ReferenceEnhancer)
genome_annotation <- LoadGtf("test_genes.gtf")
gene_overlaps <- IdentifyOverlappers(genome_annotation)
OverlapResolutions(genome_annotation, gene_overlaps)
IsolateIntergenicReads("test_bam.bam", "test_index.bam.bai")
GenerateGeneLocationBed(genome_annotation)
GenerateExtensionCandidates()
library(ReferenceEnhancer)
genome_annotation <- LoadGtf("test_genes.gtf")
gene_overlaps <- IdentifyOverlappers(genome_annotation)
OverlapResolutions(genome_annotation, gene_overlaps)
IsolateIntergenicReads("test_bam.bam", "test_index.bam.bai")
GenerateGeneLocationBed(genome_annotation)
GenerateExtensionCandidates()
OptimizedAnnotationAssembler(genome_annotation, "premrna.gtf", "overlapping_genes.csv", "gene_extension.csv", "gene_replacement.csv")
library(ReferenceEnhancer)
genome_annotation <- LoadGtf("test_genes.gtf")
gene_overlaps <- IdentifyOverlappers(genome_annotation)
OverlapResolutions(genome_annotation, gene_overlaps)
IsolateIntergenicReads("test_bam.bam", "test_index.bam.bai")
IsolateIntergenicReads("test_bam.bam", "test_index.bam.bai")
library(ReferenceEnhancer)
IsolateIntergenicReads("test_bam.bam", "test_index.bam.bai")
library(ReferenceEnhancer)
genome_annotation <- LoadGtf("test_genes.gtf")
gene_overlaps <- IdentifyOverlappers(genome_annotation)
OverlapResolutions(genome_annotation, gene_overlaps)
IsolateIntergenicReads("test_bam.bam", "test_index.bam.bai")
GenerateGeneLocationBed(genome_annotation)
GenerateExtensionCandidates()
getwd()
library(ReferenceEnhancer)
GenerateExtensionCandidates()
library(ReferenceEnhancer)
GenerateExtensionCandidates()
genome_annotation <- LoadGtf("test_genes.gtf")
gene_overlaps <- IdentifyOverlappers(genome_annotation)
OverlapResolutions(genome_annotation, gene_overlaps)
IsolateIntergenicReads("test_bam.bam", "test_index.bam.bai")
GenerateGeneLocationBed(genome_annotation)
GenerateExtensionCandidates()
PremrnaAnnotationGenerator(genome_annotation)
library(ReferenceEnhancer)
summary_data = read.table("results.txt", sep = "\t")
summary_data = summary_data[summary_data$V23>-10000,]
summary_data = summary_data[summary_data$V23<0,]
hist(summary_data$V23)
summary_data_genes = table(summary_data$V22)
o = order(summary_data_genes, decreasing = TRUE)
length(summary_data_genes)
summary_data_genes = summary_data_genes[o]
length(summary_data_genes[summary_data_genes>10]) # Determine number of genes with more than 10 intergenic reads within 10kb of known gene end
summary_data_genes = summary_data_genes[summary_data_genes>10] # Threshold gene list based on the amount of intergenic gene loading.
summary_data_genes = data.frame(summary_data_genes)
dim(summary_data_genes)
summary_data_genes[1:40,]
summary_data_genes
library(ReferenceEnhancer)
GenerateExtensionCandidates()
PremrnaAnnotationGenerator(genome_annotation)
library(ReferenceEnhancer)
library(ReferenceEnhancer)
library(ReferenceEnhancer)
library(ReferenceEnhancer)
system.file(".")
library(ReferenceEnhancer)
ls()
getwd()
ls()
system.file("extdata", "test_genes.gtf", package = "ReferenceEnhancer")
system.file(package = "ReferenceEnhancer")
wd()
getwd()
test = read.table("./results.txt", sep = "\t")
test
file.choose()
library(ReferenceEnhancer)
library(ReferenceEnhancer)
genome_annotation <- LoadGtf("test_genes.gtf")
gene_overlaps <- IdentifyOverlappers(genome_annotation)
OverlapResolutions(genome_annotation, gene_overlaps)
IsolateIntergenicReads("test_bam.bam", "test_index.bam.bai")
GenerateGeneLocationBed(genome_annotation)
GenerateExtensionCandidates()
PremrnaAnnotationGenerator(genome_annotation)
exists(genome_annotation)
exists('genome_annotation')
library(ReferenceEnhancer)
genome_annotation <- LoadGtf("test_genes.gtf")
gene_overlaps <- IdentifyOverlappers(genome_annotation)
OverlapResolutions(genome_annotation, gene_overlaps)
IsolateIntergenicReads("test_bam.bam", "test_index.bam.bai")
GenerateGeneLocationBed(genome_annotation)
GenerateExtensionCandidates()
PremrnaAnnotationGenerator(genome_annotation)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_genes.csv", "gene_extension.csv", "gene_replacement.csv")
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_genes_list.csv", "gene_extension.csv", "gene_replacement.csv")
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension.csv", "gene_replacement.csv")
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
library(ReferenceEnhancer)
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
library(ReferenceEnhancer)
library(ReferenceEnhancer)
GenerateExtensionCandidates()
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
integer(0)
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv")
makeGRangesFromDataFrame()
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv")
library(ReferenceEnhancer)
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "gene_replacement.csv")
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", “test_gene_replacement.csv")
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "test_gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "test_gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "test_gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "test_gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "test_gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "test_gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "test_gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "test_gene_replacement.csv")
library(ReferenceEnhancer)
OptimizedAnnotationAssembler("test_genes.gtf", "premrna.gtf", "overlapping_gene_list.csv", "gene_extension_candidates.csv", "test_gene_replacement.csv")
library(ReferenceEnhancer)
library(devtools)
install_github("PoolLab")
install_github("PoolLab/ReferenceEnhancer")
install_github("PoolLab/ReferenceEnhancer")
install_github("PoolLab")
library(ReferenceEnhancer)
